;======================================================================
; setup.ins CLAWS-MAIL
; Installer-Typ: NSIS
; 
; J. Boettge <boettge@mpi-halle.mpg.de>  2021-03-08 09:30:25 +0100
;======================================================================

;======================================================================
[Initial]
;======================================================================
setLogLevel=5
; Log Errors in Logfile and abort:
ExitOnError=true
; Show syntax errors in the script:
ScriptErrorMessages=off
; Dont trace step by step through the script:
TraceMode=off 
; Let started programs run in front of the winst window
StayOnTop=false 

;======================================================================
[Actions]
;======================================================================
include_insert "%ScriptPath%\product_variables.opsiinc"


;=== Check free space
if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
	; Stop process and set installation status to failed
else
	;=== remove previous installation
	if FileExists("%ScriptPath%\delsub.opsiinc")
		comment  "Starting uninstall sub section"
		; sub "%ScriptPath%\delsub.opsiinc"	
		include_append "%ScriptPath%\delsub.opsiinc"
		sub_delsub_main
	else
		logError "Can't find uninstaller script"
		isFatalError "delsub.opsiinc not found"
	endif	
	
	; Start the installation
	ShowBitmap $Img_Install$ $ProductName$
	Message "Installing " + $ProductName$ + " " + $Version$+ " (" + $sw_arch$ + " bit)"
	
	marktime	
	
	if not (FileExists($Installer$))
		logError "Installer not found: [" + $Installer$ + "]"
		isFatalError
	endif
	
	comment "Start setup program"
	Winbatch_install
	Sub_check_exitcode_nsis
	
	set $MainBin$ = $InstallDir$+$CheckBin$
	
	if not (FileExists($MainBin$))
		logError "Main binary not found! [" + $InstallDir$+$MainBin$ + "]"
		isFatalError
	endif
	
	;=== create desktop link if requested
	if ($pr_DesktopLink$ = "true")
		LinkFolder_CreateDesktopLink
	endif

	LinkFolder_clear_StartMenuLinks
	LinkFolder_create_StartMenuLinks
	
	;=== custom post install
	comment "include custom post install file"
	if not ($CustomPostInstall$ = "none")
		if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
			ShowBitmap $Img_Install_Custom$ $ProductName$
			include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
			ShowBitmap $Img_Install$ $ProductName$
		endif
	endif
	
	;=== measure installation time
	set $TimeDiff$ = getDiffTimeSec
	Message  "Setup time: " + $TimeDiff$ + " seconds"	
endif

{{#ifdef_legacy}}
;=== Prepare the change from dfn_ to o4i_
; Stage 1 - logWarning
; Stage 2 - logError (entire functionality)
; Stage 3 - logError (NO functionality)
; Stage 4 - logError (NO functionality except uninstall; no binaries)
;           removal of this package from repository pending
;-----------------------------------------
; This is stage 1
;-----------------------------------------
logWarning "*******************************************************************************************"
logWarning "This package is DEPRECATED!"
logWarning "The functionality is completely taken over by o4i_" + $StrippedProductId$+"."
logWarning "Use o4i_{{O_SOFTWARE}} instead! This will also remove (dfn_{{O_SOFTWARE}} from the client automatically)"
logWarning "dfn_" + $StrippedProductId$ + " can be removed then from your depot."
logWarning "*******************************************************************************************"

;logError "*******************************************************************************************"
;logError "This package will not be maintained any longer!"
;logError "The functionality is completely taken over by o4i_" + $StrippedProductId$+"."
;logError "Use o4i_{{O_SOFTWARE}} instead! (dfn_{{O_SOFTWARE}} will be removed then automatically)"
;logError "dfn_" + $StrippedProductId$ + " should be removed the then from your depot."
;logError "*******************************************************************************************"
;logError "This is a FATAL ERROR!"
;logError "*******************************************************************************************"
; set $result$ = "Package is end of life"
; set $result$ = currentProductSetReport($result$)
;Message "Updating status information for this package on depot"
;set $result$ = productSetActionRequest($ProductId$, "none")
;set $result$ = productExtUpdateOnClient($ProductId$, "forbidden", "not_installed", "failed", "Discontinued package!")
;isSuspended
; isFatalError "Discontinued package!"
{{/ifdef_legacy}}
 
;======================================================================
[Winbatch_install]
;======================================================================
"$Installer$" $Inst_Opts$ 
 
 
;=====================================================================
[LinkFolder_clear_StartMenuLinks]
;=====================================================================
set_basefolder common_programs
set_subfolder ""
delete_element "$StrippedProductId$"
delete_element "$StrippedProductId$ Manual"
delete_element "Uninstall"

 
;=====================================================================
[LinkFolder_CreateDesktopLink]
;=====================================================================
set_basefolder common_desktopdirectory
set_subfolder ""
set_link
       name: $ProductName$
       target: "$MainBin$"
       parameters:
       working_dir: "$InstallDir$"
       icon_file: "$MainBin$"
       icon_index:
end_link


;=====================================================================
[LinkFolder_create_StartMenuLinks]
;=====================================================================
set_basefolder common_programs
set_subfolder "$ProductName$"
set_link 
	name: $ProductName$
	target: "$MainBin$"
	parameters:
	working_dir: "$InstallDir$"
	icon_file:
	icon_index:
end_link
set_link 
	name: $ProductName$ Manual
	target: "$InstallDir$\$Manual$"
	parameters:
	working_dir:
	icon_file:
	icon_index:
end_link
